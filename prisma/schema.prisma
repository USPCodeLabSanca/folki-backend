// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

model campus {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  institutes institute[]
}

model institute {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  jupiterCode String    @default("")
  isVisible   Boolean   @default(true)
  campus      campus    @relation(fields: [campusId], references: [id])
  campusId    Int
  courses     course[]
  subject     subject[]
  users       user[]
}

model course {
  id             Int               @id @default(autoincrement())
  name           String
  jupiterCode    String            @default("")
  jupiterCodeHab String            @default("")
  institute      institute         @relation(fields: [instituteId], references: [id])
  instituteId    Int
  defaultSubject default_subject[]
  users          user[]
}

model subject {
  id             Int               @id @default(autoincrement())
  name           String
  code           String            @unique
  institute      institute         @relation(fields: [instituteId], references: [id])
  instituteId    Int
  defaultSubject default_subject[]
  subjectClass   subject_class[]
  user_subject   user_subject[]
}

model default_subject {
  subject   subject @relation(fields: [subjectId], references: [id])
  subjectId Int
  course    course  @relation(fields: [courseId], references: [id])
  courseId  Int
  period    Int

  @@id([subjectId, courseId])
}

model subject_class {
  id            Int     @id @default(autoincrement())
  subject       subject @relation(fields: [subjectId], references: [id])
  subjectId     Int
  professorName String
  details       String
  availableDays Json
}

model user {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  name           String
  institute      institute?     @relation(fields: [instituteId], references: [id])
  instituteId    Int?
  course         course?        @relation(fields: [courseId], references: [id])
  courseId       Int?
  securePin      String?        @default("1234")
  isVerified     Boolean        @default(false)
  authTimesTried Int            @default(0)
  lastAuthTry    DateTime?
  createdAt      DateTime       @default(now())
  deletedAt      DateTime?
  updatedAt      DateTime       @updatedAt
  lastLogin      DateTime?
  lastAccess     DateTime?
  user_auth      user_auth[]
  user_subject   user_subject[]
}

model user_auth {
  id        Int      @id @default(autoincrement())
  user      user     @relation(fields: [userId], references: [id])
  userId    Int
  authCode  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model user_subject {
  user          user           @relation(fields: [userId], references: [id])
  userId        Int
  subject       subject        @relation(fields: [subjectId], references: [id])
  subjectId     Int
  absences      Int            @default(0)
  grading       Float          @default(0)
  createdAt     DateTime       @default(now())
  availableDays Json
  updatedAt     DateTime       @updatedAt
  user_absences user_absence[]

  @@id([userId, subjectId])
}

model user_absence {
  id          Int          @id @default(autoincrement())
  date        DateTime
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  userSubject user_subject @relation(fields: [userId, subjectId], references: [userId, subjectId])
  userId      Int
  subjectId   Int
}
